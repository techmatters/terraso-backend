# Copyright Â© 2023 Technology Matters
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see https://www.gnu.org/licenses/.

# Generated by Django 4.2.5 on 2023-09-27 23:15

import uuid

import django.core.validators
import django.db.models.deletion
import rules.contrib.models
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("project_management", "0019_project_seen_by_site_seen_by"),
        ("soil_id", "0004_soildata_depth_intervals"),
    ]

    operations = [
        migrations.CreateModel(
            name="ProjectDepthInterval",
            fields=[
                ("deleted_at", models.DateTimeField(db_index=True, editable=False, null=True)),
                ("deleted_by_cascade", models.BooleanField(default=False, editable=False)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(blank=True, max_length=10)),
                ("depth_interval_start", models.PositiveIntegerField(blank=True)),
                (
                    "depth_interval_end",
                    models.PositiveIntegerField(
                        blank=True, validators=[django.core.validators.MaxValueValidator(200)]
                    ),
                ),
            ],
            options={
                "ordering": ["depth_interval_start"],
                "get_latest_by": "-created_at",
                "abstract": False,
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ProjectSoilSettings",
            fields=[
                ("deleted_at", models.DateTimeField(db_index=True, editable=False, null=True)),
                ("deleted_by_cascade", models.BooleanField(default=False, editable=False)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "measurement_units",
                    models.CharField(
                        blank=True,
                        choices=[("IMPERIAL", "Imperial"), ("METRIC", "Metric")],
                        null=True,
                    ),
                ),
                ("soil_pit_required", models.BooleanField(blank=True, default=False)),
                (
                    "depth_interval_preset",
                    models.CharField(
                        choices=[
                            ("LANDPKS", "Landpks"),
                            ("NRCS", "Nrcs"),
                            ("NONE", "None"),
                            ("CUSTOM", "Custom"),
                        ],
                        default="LANDPKS",
                    ),
                ),
                ("slope_required", models.BooleanField(blank=True, default=False)),
                ("soil_texture_required", models.BooleanField(blank=True, default=False)),
                ("soil_color_required", models.BooleanField(blank=True, default=False)),
                ("vertical_cracking_required", models.BooleanField(blank=True, default=False)),
                ("carbonates_required", models.BooleanField(blank=True, default=False)),
                ("ph_required", models.BooleanField(blank=True, default=False)),
                (
                    "soil_organic_carbon_matter_required",
                    models.BooleanField(blank=True, default=False),
                ),
                (
                    "electrical_conductivity_required",
                    models.BooleanField(blank=True, default=False),
                ),
                (
                    "sodium_adsorption_ratio_required",
                    models.BooleanField(blank=True, default=False),
                ),
                ("soil_structure_required", models.BooleanField(blank=True, default=False)),
                ("land_use_land_cover_required", models.BooleanField(blank=True, default=False)),
                ("soil_limitations_required", models.BooleanField(blank=True, default=False)),
                ("photos_required", models.BooleanField(blank=True, default=False)),
                ("notes_required", models.BooleanField(blank=True, default=False)),
            ],
            options={
                "ordering": ["created_at"],
                "get_latest_by": "-created_at",
                "abstract": False,
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="SoilDataDepthInterval",
            fields=[
                ("deleted_at", models.DateTimeField(db_index=True, editable=False, null=True)),
                ("deleted_by_cascade", models.BooleanField(default=False, editable=False)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(blank=True, max_length=10)),
                ("depth_interval_start", models.PositiveIntegerField(blank=True)),
                (
                    "depth_interval_end",
                    models.PositiveIntegerField(
                        blank=True, validators=[django.core.validators.MaxValueValidator(200)]
                    ),
                ),
                ("soil_texture_enabled", models.BooleanField(blank=True, default=False)),
                ("soil_color_enabled", models.BooleanField(blank=True, default=False)),
                ("carbonates_enabled", models.BooleanField(blank=True, default=False)),
                ("ph_enabled", models.BooleanField(blank=True, default=False)),
                (
                    "soil_organic_carbon_matter_enabled",
                    models.BooleanField(blank=True, default=False),
                ),
                ("electrical_conductivity_enabled", models.BooleanField(blank=True, default=False)),
                ("sodium_adsorption_ratio_enabled", models.BooleanField(blank=True, default=False)),
                ("soil_structure_enabled", models.BooleanField(blank=True, default=False)),
            ],
            options={
                "ordering": ["depth_interval_start"],
                "get_latest_by": "-created_at",
                "abstract": False,
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.AlterModelOptions(
            name="depthdependentsoildata",
            options={"get_latest_by": "-created_at", "ordering": ["created_at"]},
        ),
        migrations.RemoveConstraint(
            model_name="depthdependentsoildata",
            name="unique_depth_interval",
        ),
        migrations.RemoveConstraint(
            model_name="depthdependentsoildata",
            name="depth_interval_coherence",
        ),
        migrations.RenameField(
            model_name="depthdependentsoildata",
            old_name="depth_start",
            new_name="depth_interval_start",
        ),
        migrations.RenameField(
            model_name="depthdependentsoildata",
            old_name="depth_end",
            new_name="depth_interval_end",
        ),
        migrations.AlterModelOptions(
            name="depthdependentsoildata",
            options={"get_latest_by": "-created_at", "ordering": ["depth_interval_start"]},
        ),
        migrations.RemoveField(
            model_name="soildata",
            name="depth_intervals",
        ),
        migrations.AddConstraint(
            model_name="depthdependentsoildata",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("soil_data", "depth_interval_start", "depth_interval_end"),
                name="soil_id_depthdependentsoildata_unique_depth_interval",
            ),
        ),
        migrations.AddConstraint(
            model_name="depthdependentsoildata",
            constraint=models.CheckConstraint(
                check=models.Q(("depth_interval_start__lt", models.F("depth_interval_end"))),
                name="soil_id_depthdependentsoildata_depth_interval_coherence",
            ),
        ),
        migrations.AddField(
            model_name="soildatadepthinterval",
            name="soil_data",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="depth_intervals",
                to="soil_id.soildata",
            ),
        ),
        migrations.AddField(
            model_name="projectsoilsettings",
            name="project",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="soil_settings",
                to="project_management.project",
            ),
        ),
        migrations.AddField(
            model_name="projectdepthinterval",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="depth_intervals",
                to="soil_id.projectsoilsettings",
            ),
        ),
        migrations.AddConstraint(
            model_name="soildatadepthinterval",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("soil_data", "depth_interval_start", "depth_interval_end"),
                name="soil_id_soildatadepthinterval_unique_depth_interval",
            ),
        ),
        migrations.AddConstraint(
            model_name="soildatadepthinterval",
            constraint=models.CheckConstraint(
                check=models.Q(("depth_interval_start__lt", models.F("depth_interval_end"))),
                name="soil_id_soildatadepthinterval_depth_interval_coherence",
            ),
        ),
        migrations.AddConstraint(
            model_name="projectdepthinterval",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("project", "depth_interval_start", "depth_interval_end"),
                name="soil_id_projectdepthinterval_unique_depth_interval",
            ),
        ),
        migrations.AddConstraint(
            model_name="projectdepthinterval",
            constraint=models.CheckConstraint(
                check=models.Q(("depth_interval_start__lt", models.F("depth_interval_end"))),
                name="soil_id_projectdepthinterval_depth_interval_coherence",
            ),
        ),
        migrations.AlterField(
            model_name="depthdependentsoildata",
            name="depth_interval_end",
            field=models.PositiveIntegerField(
                blank=True, validators=[django.core.validators.MaxValueValidator(200)]
            ),
        ),
        migrations.AlterField(
            model_name="depthdependentsoildata",
            name="depth_interval_start",
            field=models.PositiveIntegerField(blank=True),
        ),
    ]
