# Copyright Â© 2023 Technology Matters
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see https://www.gnu.org/licenses/.

# Generated by Django 4.2.6 on 2023-10-10 20:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import apps.core.models.commons


def copy_memberships(apps, schema_editor):
    Landscape = apps.get_model("core", "Landscape")
    MembershipList = apps.get_model("collaboration", "MembershipList")
    Membership = apps.get_model("collaboration", "Membership")
    landscapes = Landscape.objects.all()
    for landscape in landscapes:
        if not landscape.membership_list:
            landscape.membership_list = MembershipList.objects.create(
                enroll_method="both",
                membership_type="open",
            )
            landscape.save()
        default_group = landscape.associated_groups.filter(is_default_landscape_group=True).first()
        if not default_group:
            print(f"no default group for landscape {landscape.name}")
            continue
        current_memberships = default_group.group.memberships.filter(
            deleted_at__isnull=True
        ).distinct("user")
        for membership in current_memberships:
            Membership.objects.create(
                membership_list=landscape.membership_list,
                user=membership.user,
                user_role=membership.user_role,
                membership_status=membership.membership_status,
            )


class Migration(migrations.Migration):
    dependencies = [
        ("collaboration", "0005_change_collaborator_to_editor"),
        ("core", "0046_shared_resource"),
    ]

    operations = [
        migrations.AddField(
            model_name="landscape",
            name="membership_list",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="landscape",
                to="collaboration.membershiplist",
            ),
        ),
        migrations.RunPython(copy_memberships),
    ]
