name: build

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.2'

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: 'requirements**.txt'

      - name: Install Python dependencies for CI
        run: make install-dev

      - name: Build base Docker image
        run: |
          cp .env.sample .env
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env
          make build DC_ENV=ci

      - name: Run lint checks
        run: make lint

  build-and-test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build base Docker image
        run: |
          cp .env.sample .env
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env
          make build DC_ENV=ci

      - name: Restore data cache
        uses: actions/cache@v4
        with:
          path: Data/
          key: ${{ runner.os }}-data-${{ hashFiles('*') }}
          restore-keys: ${{ runner.os }}-data-

      - name: Setup Python
        if: ${{ hashFiles('Data/*') == '' }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.2'

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: 'requirements**.txt'

      - name: Install Python dependencies and download data
        if: ${{ hashFiles('Data/*') == '' }}
        run: |
          make install-dev
          make download-soil-data

      - name: Run tests using built Docker image
        run: make test-ci DC_ENV=ci
